INCLUDE_DIRECTORIES(/usr/include/ni)
INCLUDE_DIRECTORIES(/usr/local/include/eigen3)
INCLUDE_DIRECTORIES(/usr/local/include/g2o)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/cmake_modules/")
MESSAGE(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH})
# g2o #######################
FIND_PACKAGE(G2O REQUIRED)
INCLUDE_DIRECTORIES(${G2O_INCLUDE_DIR})
MESSAGE("G2O_INCLUDE_DIRS ${G2O_INCLUDE_DIR}")
LINK_DIRECTORIES(${G2O_LIBRARY_DIRS})
LINK_LIBRARIES(${G2O_LIBRARIES})
MESSAGE("G2o-libraries ${G2O_LIBRARIES}")

# CSparse #######################
FIND_PACKAGE(CSparse REQUIRED)
INCLUDE_DIRECTORIES(${CSPARSE_INCLUDE_DIR})
MESSAGE("CSPARSE_INCLUDE_DIRS"${CSPARSE_INCLUDE_DIR})
LINK_DIRECTORIES(${CSparse_LIBRARY_DIRS})
LINK_LIBRARIES(${CSPARSE_LIBRARY})
MESSAGE("CSparse-libraries ${CSPARSE_LIBRARY}")

SET(LIBKINECTINPUT Kinect_Input.cpp)
SET(LIBDETECTION Detect.cpp)
SET(LIBPOINTCLOUD PointCloudProcess.cpp)
ADD_LIBRARY(GETKINECT SHARED ${LIBKINECTINPUT})
ADD_LIBRARY(SURFDETECT SHARED ${LIBDETECTION})
ADD_LIBRARY(POINTCLOUDPROCESS SHARED ${LIBPOINTCLOUD})
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
FIND_PACKAGE( OpenCV REQUIRED )
TARGET_LINK_LIBRARIES(GETKINECT ${OpenCV_LIBS} )
TARGET_LINK_LIBRARIES(SURFDETECT ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(POINTCLOUDPROCESS ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(GETKINECT /usr/lib/libOpenNI.so)
#TARGET_LINK_LIBRARIES(SURFDETECT /usr/lib/libOpenNI.so)
TARGET_LINK_LIBRARIES(SURFDETECT ${PROJECT_SOURCE_DIR}/lib/libGETKINECT.so)
#TARGET_LINK_LIBRARIES(POINTCLOUDPROCESS ${PROJECT_SOURCE_DIR}/lib/libSURFDETECT.so ${PROJECT_SOURCE_DIR}/lib/libGETKINECT.so)
#TARGET_LINK_LIBRARIES(POINTCLOUDPROCESS ${PROJECT_SOURCE_DIR}/lib/libSURFDETECT.so)
FIND_PACKAGE( PCL 1.7 REQUIRED COMPONENTS common io visualization filters)
INCLUDE_DIRECTORIES( ${PCL_INCLUDE_DIRS}  )
LINK_DIRECTORIES( ${PCL_LIBRARY_DIRS} )
ADD_DEFINITIONS( ${PCL_DEFINITIONS} )
TARGET_LINK_LIBRARIES( GETKINECT ${PCL_COMMON_LIBRARIES} ${PCL_IO_LIBRARIES} ${PCL_VISUALIZATION_LIBRARIES})
TARGET_LINK_LIBRARIES( POINTCLOUDPROCESS ${PCL_COMMON_LIBRARIES} ${PCL_IO_LIBRARIES} ${PCL_VISUALIZATION_LIBRARIES} ${PCL_FILTERS_LIBRARIES})

TARGET_LINK_LIBRARIES(SURFDETECT /usr/local/lib/libg2o_types_slam3d.so)
TARGET_LINK_LIBRARIES(SURFDETECT /usr/local/lib/libg2o_core.so)
TARGET_LINK_LIBRARIES(SURFDETECT /usr/local/lib/libg2o_csparse_extension.so)
TARGET_LINK_LIBRARIES(SURFDETECT /usr/local/lib/libg2o_solver_csparse.so)
TARGET_LINK_LIBRARIES(SURFDETECT /usr/local/lib/libg2o_parser.so)

TARGET_LINK_LIBRARIES(POINTCLOUDPROCESS /usr/local/lib/libg2o_types_slam3d.so)
TARGET_LINK_LIBRARIES(POINTCLOUDPROCESS /usr/local/lib/libg2o_core.so)
TARGET_LINK_LIBRARIES(POINTCLOUDPROCESS /usr/local/lib/libg2o_csparse_extension.so)
TARGET_LINK_LIBRARIES(POINTCLOUDPROCESS /usr/local/lib/libg2o_solver_csparse.so)
TARGET_LINK_LIBRARIES(POINTCLOUDPROCESS /usr/local/lib/libg2o_parser.so)





ADD_EXECUTABLE(main ../main.cpp)
LINK_DIRECTORIES(/usr/lib/)
TARGET_LINK_LIBRARIES( main /usr/lib/libOpenNI.so)
TARGET_LINK_LIBRARIES( main ${OpenCV_LIBS} )
TARGET_LINK_LIBRARIES( main ${PCL_COMMON_LIBRARIES} ${PCL_IO_LIBRARIES} ${PCL_VISUALIZATION_LIBRARIES} ${PCL_FILTERS_LIBRARIES})
#INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/lib/)
TARGET_LINK_LIBRARIES(main ${PROJECT_SOURCE_DIR}/lib/libGETKINECT.so)
TARGET_LINK_LIBRARIES(main ${PROJECT_SOURCE_DIR}/lib/libSURFDETECT.so)
TARGET_LINK_LIBRARIES(main ${PROJECT_SOURCE_DIR}/lib/libPOINTCLOUDPROCESS.so)
TARGET_LINK_LIBRARIES(main /usr/local/lib/libg2o_core.so)
#TARGET_LINK_LIBRARIES( main ${PCL_COMMON_LIBRARIES} ${PCL_IO_LIBRARIES} ${PCL_VISUALIZATION_LIBRARIES} ${PCL_FILTERS_LIBRARIES})
TARGET_LINK_LIBRARIES(main /usr/local/lib/libg2o_types_slam3d.so)
TARGET_LINK_LIBRARIES(main /usr/local/lib/libg2o_core.so)
TARGET_LINK_LIBRARIES(main /usr/local/lib/libg2o_csparse_extension.so)
TARGET_LINK_LIBRARIES(main /usr/local/lib/libg2o_solver_csparse.so)
TARGET_LINK_LIBRARIES(main /usr/local/lib/libg2o_parser.so)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)




