#ifndef POINTCLOUDPROCESS_H
#define POINTCLOUDPROCESS_H

#include <stdlib.h>
#include <iostream>
#include <string>
#include <vector> 
#include <pthread.h>

#include <Kinect_Input.h>
#include <Detect.h>

#include "opencv2/opencv.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/imgcodecs.hpp"
#include "opencv2/highgui/highgui.hpp"

#include <pcl-1.7/pcl/io/pcd_io.h>
#include <pcl-1.7/pcl/point_types.h>
#include <pcl-1.7/pcl/visualization/pcl_visualizer.h>
#include <pcl-1.7/pcl/visualization/cloud_viewer.h>

#include <Eigen/Core>
#include <Eigen/Geometry>

using namespace cv;
using namespace std;
using namespace pcl;

class PointCloud
{
	public:
		Kinect_Input pki;
		Detect pdt;
		int fuck;
		
	public:
		PointCloudProcess();
		void map_generation();
};
#endif
